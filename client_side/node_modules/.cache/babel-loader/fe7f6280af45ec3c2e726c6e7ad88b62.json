{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paige\\\\Downloads\\\\banking_system\\\\client_side\\\\src\\\\components\\\\customerHistory\\\\customerHistory.js\";\nimport React, { Component } from 'react';\nimport { Button, Card, Container, Row, Col, Dropdown } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Routes, useParams } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styles from './customerHistory.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction withParams(Component) {\n  var _s = $RefreshSig$();\n\n  return _s(props => {\n    _s();\n\n    return /*#__PURE__*/_jsxDEV(Component, { ...props,\n      params: useParams()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 21\n    }, this);\n  }, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n    return [useParams];\n  });\n}\n\nclass CustomerHistory extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: [],\n      account: [],\n      weekTransactions: [],\n      monthTransactions: [],\n      yearTransactions: [],\n      weekDay: [],\n      monthDay: [],\n      yearDay: []\n    };\n  }\n\n  componentDidMount() {\n    let {\n      id,\n      account_id\n    } = this.props.params;\n    console.log(id);\n    const urls = ['http://localhost:3000/users/logged/' + id, 'http://localhost:3000/users/account/' + id + \"/\" + account_id, 'http://localhost:3000/users/transactions/' + id + \"/\" + account_id + \"/0\", 'http://localhost:3000/users/transactions/' + id + \"/\" + account_id + \"/1\", 'http://localhost:3000/users/transactions/' + id + \"/\" + account_id + \"/2\", 'http://localhost:3000/users/frequentDay/' + id + \"/\" + account_id + \"/0\", 'http://localhost:3000/users/frequentDay/' + id + \"/\" + account_id + \"/1\", 'http://localhost:3000/users/frequentDay/' + id + \"/\" + account_id + \"/2\"];\n    this.state.user_id = id;\n    this.state.account_id = account_id;\n    let requests = urls.map(url => fetch(url));\n    Promise.all(requests).then(responses => {\n      return Promise.all(responses.map(response => response.json()));\n    }).then(responses => {\n      this.setState({\n        user: responses[0],\n        account: responses[1],\n        weekTransactions: responses[2],\n        monthTransactions: responses[3],\n        yearTransactions: responses[4],\n        weekDay: responses[5],\n        monthDay: responses[6],\n        yearDay: responses[7]\n      });\n    });\n  }\n\n  render() {\n    var weeklyShoppingTotal = 0.00;\n    var weeklyFAndD = 0.00;\n    var weeklyTransportation = 0.00;\n    var weeklyOther = 0.00;\n    var dayDict = {\n      0: \"Monday\",\n      1: \"Tuesday\",\n      2: \"Wednesday\",\n      3: \"Thursday\",\n      4: \"Friday\",\n      5: \"Saturday\",\n      6: \"Sunday\"\n    };\n    var monthlyShoppingTotal = 0.00;\n    var monthlyFAndD = 0.00;\n    var monthlyTransportation = 0.00;\n    var monthlyOther = 0.00;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      style: {\n        fontcolor: 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: true,\n          lg: \"12\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: true,\n            lg: \"7\",\n            children: /*#__PURE__*/_jsxDEV(Dropdown //onSelect={handleSelect}\n            , {\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                variant: \"success\",\n                id: \"dropdown-basic\",\n                children: \"Select Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                children: this.state.account.map(account => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  href: \"http://localhost:3001/history/\" + this.state.user_id + \"/\" + account.account_id,\n                  children: account.account_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: true,\n            lg: \"10\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\" Account History Report for Account #: \", this.state.account_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"mh-100\",\n          md: true,\n          lg: \"4\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Past Week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [this.state.weekTransactions.map(transaction => {\n              if (transaction.purchase_sector == \"shopping\") {\n                weeklyShoppingTotal += transaction.amount;\n              }\n\n              ;\n            }), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Shopping: \", weeklyShoppingTotal]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [this.state.weekTransactions.map(transaction => {\n              if (transaction.purchase_sector == \"food and drink\") {\n                weeklyFAndD += transaction.amount;\n              }\n\n              ;\n              console.log(weeklyFAndD);\n            }), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Food and Drink: \", weeklyFAndD]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [this.state.weekTransactions.map(transaction => {\n              if (transaction.purchase_sector == \"transportation\") {\n                weeklyTransportation += transaction.amount;\n              }\n\n              ;\n              console.log(weeklyTransportation);\n            }), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Transportation: \", weeklyTransportation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [this.state.weekTransactions.map(transaction => {\n              if (transaction.purchase_sector == \"other\") {\n                weeklyOther += transaction.amount;\n              }\n\n              ;\n              console.log(weeklyOther);\n            }), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Other: \", weeklyOther]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: this.state.weekDay.map(weekDay => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"The weekday you spend the most money on is \", dayDict[weekDay.mostFrequent]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"mh-100\",\n          md: true,\n          lg: \"4\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Past Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [this.state.monthTransactions.map(transaction => {\n              if (transaction.purchase_sector == \"shopping\") {\n                monthlyShoppingTotal += transaction.amount;\n              }\n\n              ;\n            }), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Shopping: \", monthlyShoppingTotal]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [this.state.monthTransactions.map(transaction => {\n              if (transaction.purchase_sector == \"food and drink\") {\n                monthlyFAndD += transaction.amount;\n              }\n\n              ;\n            }), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Food and Drink: \", monthlyFAndD]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [this.state.monthTransactions.map(transaction => {\n              if (transaction.purchase_sector == \"transportation\") {\n                monthlyTransportation += transaction.amount;\n              }\n\n              ;\n            }), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Transportation: \", monthlyTransportation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [this.state.monthTransactions.map(transaction => {\n              if (transaction.purchase_sector == \"other\") {\n                monthlyOther += transaction.amount;\n              }\n\n              ;\n            }), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Other: \", monthlyOther]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: this.state.weekDay.map(monthDay => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"The weekday you spend the most money on is \", dayDict[monthDay.mostFrequent]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: \"You spend the most money during the week of the\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"mh-100\",\n          md: true,\n          lg: \"4\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Past Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: \"Shopping:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: \"Food and Drink:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: \"Travel:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: \"Other:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: \"You spend the most money on\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: \"You spend the most money during the week of the\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: \"You spend the most money during the month of\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default _c = withParams(CustomerHistory);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Component","Button","Card","Container","Row","Col","Dropdown","BrowserRouter","Router","Route","Routes","useParams","styles","withParams","props","CustomerHistory","constructor","state","user","account","weekTransactions","monthTransactions","yearTransactions","weekDay","monthDay","yearDay","componentDidMount","id","account_id","params","console","log","urls","user_id","requests","map","url","fetch","Promise","all","then","responses","response","json","setState","render","weeklyShoppingTotal","weeklyFAndD","weeklyTransportation","weeklyOther","dayDict","monthlyShoppingTotal","monthlyFAndD","monthlyTransportation","monthlyOther","fontcolor","transaction","purchase_sector","amount","mostFrequent"],"sources":["C:/Users/paige/Downloads/banking_system/client_side/src/components/customerHistory/customerHistory.js"],"sourcesContent":["import React, {Component} from 'react'\nimport {Button , Card , Container, Row, Col, Dropdown} from 'react-bootstrap'\nimport { BrowserRouter as Router, Route, Routes, useParams} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport styles from './customerHistory.css';\n\n\nfunction withParams(Component) {\n    return props => <Component {...props} params={useParams()} />;\n  }\n\nclass CustomerHistory extends Component {  \n    constructor(){\n        super();\n        this.state = {\n            user:[],\n            account: [],\n            weekTransactions: [],\n            monthTransactions: [],\n            yearTransactions: [],\n            weekDay: [],\n            monthDay: [],\n            yearDay: [],\n        }\n    }\n\n    componentDidMount(){\n        \n        let { id , account_id } = this.props.params;\n        console.log(id)\n        const urls = [\n            'http://localhost:3000/users/logged/'+id,\n            'http://localhost:3000/users/account/'+id+\"/\"+account_id,\n            'http://localhost:3000/users/transactions/'+id+\"/\"+account_id+\"/0\",\n            'http://localhost:3000/users/transactions/'+id+\"/\"+account_id+\"/1\",\n            'http://localhost:3000/users/transactions/'+id+\"/\"+account_id+\"/2\",\n            'http://localhost:3000/users/frequentDay/'+id+\"/\"+account_id+\"/0\",\n            'http://localhost:3000/users/frequentDay/'+id+\"/\"+account_id+\"/1\",\n            'http://localhost:3000/users/frequentDay/'+id+\"/\"+account_id+\"/2\",\n\n            \n        ]\n        this.state.user_id = id;\n        this.state.account_id = account_id;\n        let requests = urls.map((url) => fetch(url));\n        Promise.all(requests)\n            .then((responses) => {\n                return Promise.all(responses.map((response) => response.json()));\n            })\n            .then((responses) => {\n                this.setState({\n                    user : responses[0],\n                    account : responses[1],\n                    weekTransactions: responses[2],\n                    monthTransactions: responses[3],\n                    yearTransactions: responses[4],\n                    weekDay: responses[5],\n                    monthDay: responses[6],\n                    yearDay: responses[7],\n                });\n            });\n    }\n\n    render (){\n        var weeklyShoppingTotal = 0.00;\n        var weeklyFAndD = 0.00;\n        var weeklyTransportation = 0.00;\n        var weeklyOther = 0.00;\n        \n        var dayDict = {0: \"Monday\", 1: \"Tuesday\", 2: \"Wednesday\", 3: \"Thursday\", 4: \"Friday\", 5: \"Saturday\", 6: \"Sunday\"};\n\n        var monthlyShoppingTotal = 0.00;\n        var monthlyFAndD = 0.00;\n        var monthlyTransportation = 0.00;\n        var monthlyOther = 0.00;\n       \n        return (\n                <Container fluid style={{ fontcolor: 'black' }}>\n                    <Row >\n                        <Col md lg=\"12\">\n                            <Col md lg= \"7\">\n                                <Dropdown\n                                    //onSelect={handleSelect}\n                                >\n            \n                                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                                        Select Account\n                                    </Dropdown.Toggle>\n\n                                    <Dropdown.Menu>\n                                        {this.state.account.map(account =>\n                                            <Dropdown.Item href={\"http://localhost:3001/history/\" + this.state.user_id + \"/\" + account.account_id} >{account.account_id}</Dropdown.Item>\n\n                                        )}                                        \n                                    </Dropdown.Menu>\n                                </Dropdown>\n                            </Col>\n                            <Col md lg=\"10\">\n                                <h2> Account History Report for Account #: {this.state.account_id}</h2>\n                            </Col>\n                        </Col>\n                        <Col className=\"mh-100\" md lg=\"4\">\n                            <Row>\n                                <h5>Past Week</h5>\n                            </Row>\n                            <Row>\n                                {this.state.weekTransactions.map(transaction =>\n                                    {\n                                        if (transaction.purchase_sector == \"shopping\"){\n                                            weeklyShoppingTotal += transaction.amount;\n                                        };\n                                    }\n                                    \n                                )}\n                                <p> Shopping: {weeklyShoppingTotal}</p>\n\n                            </Row>\n                            <Row>\n                                {this.state.weekTransactions.map(transaction =>\n                                    {\n                                        if (transaction.purchase_sector == \"food and drink\"){\n                                            weeklyFAndD += transaction.amount;\n                                        };\n                                        console.log(weeklyFAndD);\n                                    }\n                                    \n                                )}\n                                <p> Food and Drink: {weeklyFAndD}</p>\n                                \n                            </Row>\n                            <Row>\n\n                                {this.state.weekTransactions.map(transaction =>\n                                    {\n                                        if (transaction.purchase_sector == \"transportation\"){\n                                            weeklyTransportation += transaction.amount;\n                                        };\n                                        console.log(weeklyTransportation);\n                                    }\n                                    \n                                )}\n                                <p> Transportation: {weeklyTransportation}</p>\n                            </Row>\n                            \n                            <Row>\n                                {this.state.weekTransactions.map(transaction =>\n                                    {\n                                        if (transaction.purchase_sector == \"other\"){\n                                            weeklyOther += transaction.amount;\n                                        };\n                                        console.log(weeklyOther);\n                                    }\n                                    \n                                )}\n                                <p> Other: {weeklyOther}</p>\n                            </Row>\n                            <Row>\n                                {this.state.weekDay.map(weekDay =>\n                                    <p>The weekday you spend the most money on is {dayDict[weekDay.mostFrequent]}</p>\n                                )}\n                            </Row>\n                        </Col>\n                        <Col className=\"mh-100\" md lg=\"4\">\n                            <Row>\n                                <h5>Past Month</h5>\n                            </Row>\n                            <Row>\n                                {this.state.monthTransactions.map(transaction =>\n                                    {\n                                        if (transaction.purchase_sector == \"shopping\"){\n                                            monthlyShoppingTotal += transaction.amount;\n                                        };\n                                    }\n                                    \n                                )}\n                                <p> Shopping: {monthlyShoppingTotal}</p>\n\n                            </Row>\n                            <Row>\n                                {this.state.monthTransactions.map(transaction =>\n                                    {\n                                        if (transaction.purchase_sector == \"food and drink\"){\n                                            monthlyFAndD += transaction.amount;\n                                        };\n                                    }\n                                    \n                                )}\n                                <p> Food and Drink: {monthlyFAndD}</p>\n                                \n                            </Row>\n                            <Row>\n\n                                {this.state.monthTransactions.map(transaction =>\n                                    {\n                                        if (transaction.purchase_sector == \"transportation\"){\n                                            monthlyTransportation += transaction.amount;\n                                        };\n                                    }\n                                    \n                                )}\n                                <p> Transportation: {monthlyTransportation}</p>\n                            </Row>\n                            \n                            <Row>\n                                {this.state.monthTransactions.map(transaction =>\n                                    {\n                                        if (transaction.purchase_sector == \"other\"){\n                                            monthlyOther += transaction.amount;\n                                        };\n                                    }\n                                    \n                                )}\n                                <p> Other: {monthlyOther}</p>\n                            </Row>\n                            <Row>\n                                {this.state.weekDay.map(monthDay =>\n                                    <p>The weekday you spend the most money on is {dayDict[monthDay.mostFrequent]}</p>\n                                )}\n                            </Row>\n                            <Row>\n                                You spend the most money during the week of the\n                            </Row>\n                        </Col>\n                        <Col className=\"mh-100\" md lg=\"4\">\n                            <Row>\n                                <h5>Past Year</h5>\n                            </Row>\n                            <Row>\n                                Shopping:\n                            </Row>\n                            <Row>\n                                Food and Drink:\n                            </Row>\n                            <Row>\n                                Travel:\n                            </Row>\n                            <Row>\n                                Other:\n                            </Row>\n                            <Row>\n                                You spend the most money on\n                            </Row>\n                            <Row>\n                                You spend the most money during the week of the\n                            </Row>\n                            <Row>\n                                You spend the most money during the month of\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n        );\n    }  \n}\n\nexport default withParams(CustomerHistory);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}